#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int target) {
        for (int i = 0; i < arr.size(); i++) {
            int sum = 0;

            // Calculate the sum of subarrays starting from index `i`
            for (int j = i; j < arr.size(); j++) {
                sum += arr[j];

                // Check if the current sum matches the target
                if (sum == target) {
                    return{i+1,j+1};
                }
            }
        }

        // If no subarray with the target sum is found
        return{-1};
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        int d;
        string input;

        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        cin >> d;
        cin.ignore();

        Solution ob;
        vector<int> result = ob.subarraySum(arr, d);
        for (int i : result) {
            cout << i << " ";
        }
        cout << "\n~\n";
    }
    return 0;
}
