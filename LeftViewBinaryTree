/*

class Node {
public:
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = nullptr;
        right = nullptr;
    }
};
 */

class Solution {
  public:
    vector<int> leftView(Node *root) {
        // code here
        vector<int> result;
        if (!root) return result;  // Empty tree
        
        queue<Node*> q;
        q.push(root);
        
        while (!q.empty()) {
            int n = q.size();
            
            // Traverse all nodes of current level
            for (int i = 0; i < n; i++) {
                Node* curr = q.front();
                q.pop();
                
                // First node of this level
                if (i == 0) {
                    result.push_back(curr->data);
                }
                
                // Push children into queue
                if (curr->left) q.push(curr->left);
                if (curr->right) q.push(curr->right);
            }
        }
        return result;
    }
};

/*
Input: root[] = [1, 2, 3, N, N, 4, N, N, 5, N, N]

Output: [1, 2, 4, 5]
Explanation: From the left side of the tree, the nodes 1, 2, 4, and 5 are visible.
*/
